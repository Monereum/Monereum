syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "com.quorum.tessera.grpc.p2p";

service P2PTransaction {

    rpc Delete(DeleteRequest) returns (DeleteRequest) { }

    rpc Resend(ResendRequest) returns (ResendResponse) { }

    rpc Push(PushRequest) returns (PushRequest) { }

}

service PartyInfo {

    rpc GetPartyInfo (PartyInfoMessage) returns (PartyInfoMessage) { }

    rpc GetPartyInfoStream (stream PartyInfoMessage) returns (stream PartyInfoMessage) { }

    rpc GetPartyInfoMessage (google.protobuf.Empty) returns (PartyInfoJson) { }

}

service Tessera {

    rpc GetVersion (google.protobuf.Empty) returns (VersionMessage) {
        option (google.api.http) = {
            get: "/version"
            body: "*"
        };
    }

    rpc GetUpCheck (google.protobuf.Empty) returns (UpCheckMessage) {
        option (google.api.http) = {
            get: "/upcheck"
            body: "*"
        };
    }

}

message DeleteRequest {
    string key = 1;
}

enum ResendRequestType {
    ALL = 0;
    INDIVIDUAL = 1;
}

message ResendRequest {
    ResendRequestType type = 1;
    string publicKey = 2;
    string key = 3;
}

message ResendResponse {
    bytes data = 1;
}

message VersionMessage {
    string version = 1;
}

message UpCheckMessage {
    string upCheck = 1;
}

message PartyInfoMessage {
    bytes partyInfo = 1;
}

message Peer {
    string url = 1;
    google.protobuf.Timestamp utcTimestamp = 2;
}


message PartyInfoJson {
    string url = 1;
    repeated Peer peers = 2;
    map<string, string> keys = 3;
}

message PushRequest {
    bytes data = 1;
}